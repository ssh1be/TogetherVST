rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    match /rooms/{roomId} {
      allow read, create: if request.auth.uid != null;
      allow update: if request.auth.uid != null; // Allow any authenticated user to update the room.
      allow delete: if request.auth.uid == resource.data.creator;
      match /tracks/{trackId} {
    	  allow read, create: if request.auth.uid != null;
        allow write: if request.auth.uid != null;
        allow delete: if request.auth.uid != null;
    	  // You can further restrict 'write' and 'delete' operations here
        match /audioClips/{clipId} {
          allow read, write: if request.auth.uid != null;
          allow update: if request.auth.uid != null;
        }
  	  }
    }
    match /cursors/{cursorId} {
  		allow read: if true; // Everyone can read all cursors
  		allow write: if request.auth.uid == cursorId; // Users can only write their own cursor position
      allow delete: if request.auth.uid == cursorId;
		}
    
    // Add other rules here for different paths as needed
  }
}